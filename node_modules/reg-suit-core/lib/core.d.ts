import { CoreConfig, CreateQuestionsOptions, RegSuitConfiguration } from "reg-suit-interface";
import { RegLogger, LogLevel } from "reg-suit-util";
import { ConfigManager } from "./config-manager";
import { PluginManager } from "./plugin-manager";
import { RegProcessor } from "./processor";
export declare class RegSuitCore {
    noEmit: boolean;
    logger: RegLogger;
    _configManager: ConfigManager;
    _pluginManager: PluginManager;
    constructor(opt?: {
        logLevel?: LogLevel;
        noEmit?: boolean;
        configFileName?: string;
    });
    get config(): RegSuitConfiguration;
    createQuestions(opt: CreateQuestionsOptions): {
        name: string;
        questions: any[];
        prepare: (inquireResult: any) => Promise<any>;
        configured: any;
    }[];
    persistMergedConfig(opt: {
        core?: CoreConfig;
        pluginConfigs: {
            name: string;
            config: any;
        }[];
    }, confirm: (newConfig: RegSuitConfiguration) => Promise<boolean>): Promise<void>;
    createProcessor(): RegProcessor;
    getDirectoryInfo(): {
        prjDir: string;
        workingDirs: {
            base: string;
            actualDir: string;
            expectedDir: string;
            diffDir: string;
        };
        userDirs: {
            actualDir: string;
        };
    };
    _getPrjDir(): string;
    _getWorkingDirs(): {
        base: string;
        actualDir: string;
        expectedDir: string;
        diffDir: string;
    };
    _getUserDirs(): {
        actualDir: string;
    };
}
