import { PluginLogger, WorkingDirectoryInfo } from "reg-suit-interface";
export declare type FileItem = {
    path: string;
    absPath: string;
    mimeType: string;
};
export declare type RemoteFileItem = {
    key: string;
    remotePath: string;
};
export declare type ObjectMetadata = {
    key: string;
};
export declare type ObjectListResult = {
    isTruncated: boolean;
    contents: ObjectMetadata[];
    nextMarker?: string;
};
export declare abstract class AbstractPublisher {
    protected noEmit: boolean;
    protected logger: PluginLogger;
    protected abstract uploadItem(key: string, item: FileItem): Promise<FileItem>;
    protected abstract downloadItem(remoteItem: RemoteFileItem, item: FileItem): Promise<FileItem>;
    protected abstract listItems(lastKey: string, prefix: string): Promise<ObjectListResult>;
    protected abstract getWorkingDirs(): WorkingDirectoryInfo;
    protected abstract getLocalGlobPattern(): string | undefined;
    protected abstract getBucketName(): string;
    protected abstract getBucketRootDir(): string | undefined;
    protected createList(): Promise<FileItem[]>;
    protected resolveInBucket(key: string): string;
    protected fetchInternal(key: string): Promise<any>;
    protected publishInternal(key: string): Promise<{
        items: FileItem[];
        indexFile: FileItem | undefined;
    }>;
}
