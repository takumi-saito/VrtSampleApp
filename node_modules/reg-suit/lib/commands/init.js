"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const inquirer_1 = __importDefault(require("inquirer"));
const cp_file_1 = __importDefault(require("cp-file"));
const install_1 = __importDefault(require("./install"));
const prepare_1 = __importDefault(require("./prepare"));
const package_util_1 = __importDefault(require("../package-util"));
const get_reg_core_1 = __importDefault(require("../get-reg-core"));
function init(options) {
    return (0, install_1.default)(options)
        .then(() => (0, prepare_1.default)(options, true))
        .then(() => {
        return inquirer_1.default
            .prompt([
            {
                name: "copyFromSample",
                message: "Copy sample images to working dir",
                type: "confirm",
                default: true,
            },
        ])
            .then(({ copyFromSample }) => {
            const core = (0, get_reg_core_1.default)(options);
            const { actualDir } = core.getDirectoryInfo().userDirs;
            core.logger.info("Initialization ended successfully \u2728");
            if (copyFromSample) {
                const fromDir = package_util_1.default.checkInstalled("reg-cli");
                if (fromDir) {
                    return Promise.all(["actual"].map(name => {
                        const fromPath = path_1.default.join(fromDir, "report", "sample", name, "sample.png");
                        const toPath = path_1.default.join(actualDir, "sample.png");
                        return (0, cp_file_1.default)(fromPath, toPath).then(() => {
                            core.logger.verbose(`Copied file from ${fromPath} to ${toPath}.`);
                        });
                    })).then(() => {
                        core.logger.info("Execute 'reg-suit run' \u2B50");
                    });
                }
            }
            else {
                core.logger.info(`Put your images files into ${actualDir}.`);
            }
        });
    });
}
exports.default = init;
//# sourceMappingURL=init.js.map